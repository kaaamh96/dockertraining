# To build image (-t is to name it)
docker build -t hello-flask . 



  #to run container 
  docker run -d -p 5002:5002 hello-flask





  # app with database

  #update app code and docker file with database commands

  #create custom network for containers to interact
  docker network create my-custom-network

# run database containerr
  #change version to 8 if not compatible with system
  docker run -d --name mydb --network my-custom-network -e MYSQL_ROOT_PASSWORD=my-secret-pw mysql:8 

  #now build docker image for flask up with new database
 docker build -t hello-flask-mysql . 



  #now run the flask app as a container 
  docker run -d --name myapp --network my-cusotm-network -p 5002:5002 hello-flask-mysql

  # check the containers are running with 
  docker ps

#stop containers
docker stop myapp



#Docker compose, create yaml file then run 
docker-compose up
docker-compose down

# after editing compose file need to run with build
docker-compose up --build

# check logs
docker-compose logs


# docker images will list  even show  versions 
docker images

#docker inspect with image id 
docker inspect 


#docker rmi image id to remove image you dont need 
docker rmi imageid

#docker system prune removes all unused images and networks
docker syystem prune 

#docker ps to see what is running
docker ps

#docker stop to stop containers
docker stop imageid imageid imageid

#docker rm to remove as it still stays with stop
docker rm imageid imageid

#to scale after setting up nginx
docker-compose up --scale web=3 --build